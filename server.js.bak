var express = require('express');
var app = express();
var nohm = require('nohm').Nohm;

app.use(express.bodyParser());
app.use(express.static('' + __dirname + '/public'));

if (process.env.REDISTOGO_URL) {
  var rtg = require("url").parse(process.env.REDISTOGO_URL);
  var redis = require("redis").createClient(rtg.port, rtg.hostname);
  redis.auth(rtg.auth.split(":")[1]);
} else {
  var redis = require("redis").createClient();
}

nohm.setClient(redis);

var User = nohm.model('User', {
  properties: {
    firstname: {
      type: 'string',
    },
    lastname: {
      type: 'string',
    },
    age: {
      type: 'integer',
    }
  }
});

var listUsers = function (req, res, next) {
  User.find(function (err, ids) {
    if (err) return next(err);
    var users = [];
    var len = ids.length;
    var count = 0;
    if (ids.length === 0) {
      return res.send([]);
    }
    ids.forEach(function (id) {
      var user = new User();
      user.load(id, function (err, props) {
        if (err) return next(err);
        users.push({
          id: this.id,
          firstname: props.firstname,
          lastname: props.lastname,
          age: props.age
        });
        if (++count === len) {
          res.send(users);
        }
      });
    });

  });
}

var userDetails = function (req, res) {
  User.load(req.params.id, function (err, properties) {    
    if (err) {
      res.status(404).send('Not found: ' + err);
    } else {
      res.send(properties);
    }
  });
};

var deleteUser = function (req, res, next) {
  var user = new User();
  user.id = req.params.id;
  user.remove(function (err) {
    if (err) return next(err);
    res.send(204);
  });
}

var createUser = function (req, res, next) {
  var user = new User();
  user.p(req.body);
  user.save(function (err) {
    if (err) return next(err);
    res.send(user.allProperties(true));
  });
}

var updateUser = function (req, res, next) {
  var user = new User();
  user.id = req.params.id;
  user.p(req.body);
  user.save(function (err) {
    if (err) return next(err);
    res.send(user.allProperties(true));
  });
}

app.all('*', function (req, res, next) {
  res.header("Access-Control-Allow-Origin", "*");
  res.header("Access-Control-Allow-Headers", "X-Requested-With");
  res.header("Content-Type", "application/json");
  next();
});
app.get('/users', listUsers);
app.get('/users/:id', userDetails);
app.del('/users/:id', deleteUser);
app.post('/users', createUser);
app.put('/users/:id', updateUser);

var port = process.env.PORT || 3000;
app.listen(port);
console.log('Server listening on port ', port);
